//// Created by sapiest on 05.10.2019.//#ifndef SELSQL_TESTUTILS_H#define SELSQL_TESTUTILS_H#include <filesystem>#include "../../src/Utils/Headers/CommonUtils.h"#include "gtest/gtest.h"class TestUtils {   public:    static void clear() {        //        std::string command;        //#ifdef __WIN32        //        const char *delete_command = "del ..\\Server\\";        //#else        //        const char *delete_command = "rm -rf ../Server/";        //#endif        //        //        std::string name = "*" + Constants::FILE_TYPE;        //        //        command = delete_command + name;        //        std::system(command.c_str());        for (auto file : std::filesystem::directory_iterator("../Server")) {            std::string path = file.path().string();            path.erase(path.begin(), path.begin() + 10);            if (std::filesystem::is_directory(file.path()) and path != "CMakeFiles") {                std::filesystem::remove_all(file.path());            }        }    }    static void checkRequests(const std::vector<std::pair<std::string, std::string>> &requests) {        Client client;        for (const auto &request : requests) {            client.execRequest(request.first);            EXPECT_EQ(client.response, request.second);        }    }};#endif  // SELSQL_TESTUTILS_H